

/*
 * Forms Service by Adobe API (Cloud Foundry)
 * The SAP Forms service by Adobe is a cloud service based on the ADS (Adobe Document Services). The Forms service REST API provides a subset of the SAP Forms service capabilities. They are addressed by different URIs (Uniform Resource Identifiers) where each URI supports data and document exchange in a JSON format. The SAP Forms service REST API delivers a comprehensive description and is easy to test. The application calls the REST API via an SAP BTP subaccount that must be subscribed to the SAP Forms service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package customer.caplabelprinting1.btpservice.ads.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import customer.caplabelprinting1.btpservice.ads.model.FileVersionInfo;
import customer.caplabelprinting1.btpservice.ads.model.SchemaMetadata;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * SchemaStoreOutput
 */
// CHECKSTYLE:OFF
public class SchemaStoreOutput 
// CHECKSTYLE:ON
{
  @JsonProperty("metaData")
  private SchemaMetadata metaData;

  @JsonProperty("note")
  private String note;

  @JsonProperty("schemaName")
  private String schemaName;

  @JsonProperty("versions")
  private List<FileVersionInfo> versions = new ArrayList<>();

  @JsonProperty("xsdSchema")
  private String xsdSchema = "Base64 String";

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
    * Set the metaData of this {@link SchemaStoreOutput} instance and return the same instance.
    *
    * @param metaData  The metaData of this {@link SchemaStoreOutput}
    * @return The same instance of this {@link SchemaStoreOutput} class
    */
   @Nonnull public SchemaStoreOutput metaData(@Nonnull final SchemaMetadata metaData) {
    this.metaData = metaData;
    return this;
  }

   /**
    * Get metaData
    * @return metaData  The metaData of this {@link SchemaStoreOutput} instance.
    */
  @Nonnull public SchemaMetadata getMetaData() {
    return metaData;
  }

  /**
   * Set the metaData of this {@link SchemaStoreOutput} instance.
   *
   * @param metaData  The metaData of this {@link SchemaStoreOutput}
   */
  public void setMetaData( @Nonnull final SchemaMetadata metaData) {
    this.metaData = metaData;
  }

   /**
    * Set the note of this {@link SchemaStoreOutput} instance and return the same instance.
    *
    * @param note  The note of this {@link SchemaStoreOutput}
    * @return The same instance of this {@link SchemaStoreOutput} class
    */
   @Nonnull public SchemaStoreOutput note(@Nonnull final String note) {
    this.note = note;
    return this;
  }

   /**
    * Get note
    * @return note  The note of this {@link SchemaStoreOutput} instance.
    */
  @Nonnull public String getNote() {
    return note;
  }

  /**
   * Set the note of this {@link SchemaStoreOutput} instance.
   *
   * @param note  The note of this {@link SchemaStoreOutput}
   */
  public void setNote( @Nonnull final String note) {
    this.note = note;
  }

   /**
    * Set the schemaName of this {@link SchemaStoreOutput} instance and return the same instance.
    *
    * @param schemaName  The schemaName of this {@link SchemaStoreOutput}
    * @return The same instance of this {@link SchemaStoreOutput} class
    */
   @Nonnull public SchemaStoreOutput schemaName(@Nonnull final String schemaName) {
    this.schemaName = schemaName;
    return this;
  }

   /**
    * Get schemaName
    * @return schemaName  The schemaName of this {@link SchemaStoreOutput} instance.
    */
  @Nonnull public String getSchemaName() {
    return schemaName;
  }

  /**
   * Set the schemaName of this {@link SchemaStoreOutput} instance.
   *
   * @param schemaName  The schemaName of this {@link SchemaStoreOutput}
   */
  public void setSchemaName( @Nonnull final String schemaName) {
    this.schemaName = schemaName;
  }

   /**
    * Set the versions of this {@link SchemaStoreOutput} instance and return the same instance.
    *
    * @param versions  The versions of this {@link SchemaStoreOutput}
    * @return The same instance of this {@link SchemaStoreOutput} class
    */
   @Nonnull public SchemaStoreOutput versions(@Nonnull final List<FileVersionInfo> versions) {
    this.versions = versions;
    return this;
  }
  /**
   * Add one versions instance to this {@link SchemaStoreOutput}.
   * @param versionsItem The versions that should be added
   * @return The same instance of type {@link SchemaStoreOutput}
   */
  @Nonnull public SchemaStoreOutput addVersionsItem( @Nonnull final FileVersionInfo versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<>();
    }
    this.versions.add(versionsItem);
    return this;
  }

   /**
    * Get versions
    * @return versions  The versions of this {@link SchemaStoreOutput} instance.
    */
  @Nonnull public List<FileVersionInfo> getVersions() {
    return versions;
  }

  /**
   * Set the versions of this {@link SchemaStoreOutput} instance.
   *
   * @param versions  The versions of this {@link SchemaStoreOutput}
   */
  public void setVersions( @Nonnull final List<FileVersionInfo> versions) {
    this.versions = versions;
  }

   /**
    * Set the xsdSchema of this {@link SchemaStoreOutput} instance and return the same instance.
    *
    * @param xsdSchema  Schema file encoded as Base64 string
    * @return The same instance of this {@link SchemaStoreOutput} class
    */
   @Nonnull public SchemaStoreOutput xsdSchema(@Nonnull final String xsdSchema) {
    this.xsdSchema = xsdSchema;
    return this;
  }

   /**
    * Schema file encoded as Base64 string
    * @return xsdSchema  The xsdSchema of this {@link SchemaStoreOutput} instance.
    */
  @Nonnull public String getXsdSchema() {
    return xsdSchema;
  }

  /**
   * Set the xsdSchema of this {@link SchemaStoreOutput} instance.
   *
   * @param xsdSchema  Schema file encoded as Base64 string
   */
  public void setXsdSchema( @Nonnull final String xsdSchema) {
    this.xsdSchema = xsdSchema;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link SchemaStoreOutput}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link SchemaStoreOutput} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("SchemaStoreOutput has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link SchemaStoreOutput} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final SchemaStoreOutput schemaStoreOutput = (SchemaStoreOutput) o;
    return Objects.equals(this.cloudSdkCustomFields, schemaStoreOutput.cloudSdkCustomFields) &&
        Objects.equals(this.metaData, schemaStoreOutput.metaData) &&
        Objects.equals(this.note, schemaStoreOutput.note) &&
        Objects.equals(this.schemaName, schemaStoreOutput.schemaName) &&
        Objects.equals(this.versions, schemaStoreOutput.versions) &&
        Objects.equals(this.xsdSchema, schemaStoreOutput.xsdSchema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metaData, note, schemaName, versions, xsdSchema, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class SchemaStoreOutput {\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("    xsdSchema: ").append(toIndentedString(xsdSchema)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}

