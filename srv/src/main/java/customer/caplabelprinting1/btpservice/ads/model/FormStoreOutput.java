

/*
 * Forms Service by Adobe API (Cloud Foundry)
 * The SAP Forms service by Adobe is a cloud service based on the ADS (Adobe Document Services). The Forms service REST API provides a subset of the SAP Forms service capabilities. They are addressed by different URIs (Uniform Resource Identifiers) where each URI supports data and document exchange in a JSON format. The SAP Forms service REST API delivers a comprehensive description and is easy to test. The application calls the REST API via an SAP BTP subaccount that must be subscribed to the SAP Forms service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package customer.caplabelprinting1.btpservice.ads.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import customer.caplabelprinting1.btpservice.ads.model.FormMetadata;
import customer.caplabelprinting1.btpservice.ads.model.SchemaStoreOutput;
import customer.caplabelprinting1.btpservice.ads.model.TemplateStoreOutput;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * FormStoreOutput
 */
// CHECKSTYLE:OFF
public class FormStoreOutput 
// CHECKSTYLE:ON
{
  @JsonProperty("description")
  private String description;

  @JsonProperty("formName")
  private String formName;

  @JsonProperty("metaData")
  private FormMetadata metaData;

  @JsonProperty("note")
  private String note;

  @JsonProperty("schema")
  private SchemaStoreOutput schema;

  @JsonProperty("templates")
  private List<TemplateStoreOutput> templates = new ArrayList<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
    * Set the description of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param description  The description of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput description(@Nonnull final String description) {
    this.description = description;
    return this;
  }

   /**
    * Get description
    * @return description  The description of this {@link FormStoreOutput} instance.
    */
  @Nonnull public String getDescription() {
    return description;
  }

  /**
   * Set the description of this {@link FormStoreOutput} instance.
   *
   * @param description  The description of this {@link FormStoreOutput}
   */
  public void setDescription( @Nonnull final String description) {
    this.description = description;
  }

   /**
    * Set the formName of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param formName  The formName of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput formName(@Nonnull final String formName) {
    this.formName = formName;
    return this;
  }

   /**
    * Get formName
    * @return formName  The formName of this {@link FormStoreOutput} instance.
    */
  @Nonnull public String getFormName() {
    return formName;
  }

  /**
   * Set the formName of this {@link FormStoreOutput} instance.
   *
   * @param formName  The formName of this {@link FormStoreOutput}
   */
  public void setFormName( @Nonnull final String formName) {
    this.formName = formName;
  }

   /**
    * Set the metaData of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param metaData  The metaData of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput metaData(@Nonnull final FormMetadata metaData) {
    this.metaData = metaData;
    return this;
  }

   /**
    * Get metaData
    * @return metaData  The metaData of this {@link FormStoreOutput} instance.
    */
  @Nonnull public FormMetadata getMetaData() {
    return metaData;
  }

  /**
   * Set the metaData of this {@link FormStoreOutput} instance.
   *
   * @param metaData  The metaData of this {@link FormStoreOutput}
   */
  public void setMetaData( @Nonnull final FormMetadata metaData) {
    this.metaData = metaData;
  }

   /**
    * Set the note of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param note  The note of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput note(@Nonnull final String note) {
    this.note = note;
    return this;
  }

   /**
    * Get note
    * @return note  The note of this {@link FormStoreOutput} instance.
    */
  @Nonnull public String getNote() {
    return note;
  }

  /**
   * Set the note of this {@link FormStoreOutput} instance.
   *
   * @param note  The note of this {@link FormStoreOutput}
   */
  public void setNote( @Nonnull final String note) {
    this.note = note;
  }

   /**
    * Set the schema of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param schema  The schema of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput schema(@Nonnull final SchemaStoreOutput schema) {
    this.schema = schema;
    return this;
  }

   /**
    * Get schema
    * @return schema  The schema of this {@link FormStoreOutput} instance.
    */
  @Nonnull public SchemaStoreOutput getSchema() {
    return schema;
  }

  /**
   * Set the schema of this {@link FormStoreOutput} instance.
   *
   * @param schema  The schema of this {@link FormStoreOutput}
   */
  public void setSchema( @Nonnull final SchemaStoreOutput schema) {
    this.schema = schema;
  }

   /**
    * Set the templates of this {@link FormStoreOutput} instance and return the same instance.
    *
    * @param templates  The templates of this {@link FormStoreOutput}
    * @return The same instance of this {@link FormStoreOutput} class
    */
   @Nonnull public FormStoreOutput templates(@Nonnull final List<TemplateStoreOutput> templates) {
    this.templates = templates;
    return this;
  }
  /**
   * Add one templates instance to this {@link FormStoreOutput}.
   * @param templatesItem The templates that should be added
   * @return The same instance of type {@link FormStoreOutput}
   */
  @Nonnull public FormStoreOutput addTemplatesItem( @Nonnull final TemplateStoreOutput templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<>();
    }
    this.templates.add(templatesItem);
    return this;
  }

   /**
    * Get templates
    * @return templates  The templates of this {@link FormStoreOutput} instance.
    */
  @Nonnull public List<TemplateStoreOutput> getTemplates() {
    return templates;
  }

  /**
   * Set the templates of this {@link FormStoreOutput} instance.
   *
   * @param templates  The templates of this {@link FormStoreOutput}
   */
  public void setTemplates( @Nonnull final List<TemplateStoreOutput> templates) {
    this.templates = templates;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link FormStoreOutput}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link FormStoreOutput} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("FormStoreOutput has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link FormStoreOutput} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final FormStoreOutput formStoreOutput = (FormStoreOutput) o;
    return Objects.equals(this.cloudSdkCustomFields, formStoreOutput.cloudSdkCustomFields) &&
        Objects.equals(this.description, formStoreOutput.description) &&
        Objects.equals(this.formName, formStoreOutput.formName) &&
        Objects.equals(this.metaData, formStoreOutput.metaData) &&
        Objects.equals(this.note, formStoreOutput.note) &&
        Objects.equals(this.schema, formStoreOutput.schema) &&
        Objects.equals(this.templates, formStoreOutput.templates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, formName, metaData, note, schema, templates, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class FormStoreOutput {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    formName: ").append(toIndentedString(formName)).append("\n");
    sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}

