

/*
 * Forms Service by Adobe API (Cloud Foundry)
 * The SAP Forms service by Adobe is a cloud service based on the ADS (Adobe Document Services). The Forms service REST API provides a subset of the SAP Forms service capabilities. They are addressed by different URIs (Uniform Resource Identifiers) where each URI supports data and document exchange in a JSON format. The SAP Forms service REST API delivers a comprehensive description and is easy to test. The application calls the REST API via an SAP BTP subaccount that must be subscribed to the SAP Forms service.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package customer.caplabelprinting1.btpservice.ads.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import customer.caplabelprinting1.btpservice.ads.model.Signature;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * SignaturesOutput
 */
// CHECKSTYLE:OFF
public class SignaturesOutput 
// CHECKSTYLE:ON
{
  @JsonProperty("Signatures")
  private List<Signature> signatures = new ArrayList<>();

  @JsonProperty("signature")
  private List<Signature> signature = new ArrayList<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
    * Set the signatures of this {@link SignaturesOutput} instance and return the same instance.
    *
    * @param signatures  List of Signatures
    * @return The same instance of this {@link SignaturesOutput} class
    */
   @Nonnull public SignaturesOutput signatures(@Nonnull final List<Signature> signatures) {
    this.signatures = signatures;
    return this;
  }
  /**
   * Add one signatures instance to this {@link SignaturesOutput}.
   * @param signaturesItem The signatures that should be added
   * @return The same instance of type {@link SignaturesOutput}
   */
  @Nonnull public SignaturesOutput addSignaturesItem( @Nonnull final Signature signaturesItem) {
    if (this.signatures == null) {
      this.signatures = new ArrayList<>();
    }
    this.signatures.add(signaturesItem);
    return this;
  }

   /**
    * List of Signatures
    * @return signatures  The signatures of this {@link SignaturesOutput} instance.
    */
  @Nonnull public List<Signature> getSignatures() {
    return signatures;
  }

  /**
   * Set the signatures of this {@link SignaturesOutput} instance.
   *
   * @param signatures  List of Signatures
   */
  public void setSignatures( @Nonnull final List<Signature> signatures) {
    this.signatures = signatures;
  }

   /**
    * Set the signature of this {@link SignaturesOutput} instance and return the same instance.
    *
    * @param signature  The signature of this {@link SignaturesOutput}
    * @return The same instance of this {@link SignaturesOutput} class
    */
   @Nonnull public SignaturesOutput signature(@Nonnull final List<Signature> signature) {
    this.signature = signature;
    return this;
  }
  /**
   * Add one signature instance to this {@link SignaturesOutput}.
   * @param signatureItem The signature that should be added
   * @return The same instance of type {@link SignaturesOutput}
   */
  @Nonnull public SignaturesOutput addSignatureItem( @Nonnull final Signature signatureItem) {
    if (this.signature == null) {
      this.signature = new ArrayList<>();
    }
    this.signature.add(signatureItem);
    return this;
  }

   /**
    * Get signature
    * @return signature  The signature of this {@link SignaturesOutput} instance.
    */
  @Nonnull public List<Signature> getSignature() {
    return signature;
  }

  /**
   * Set the signature of this {@link SignaturesOutput} instance.
   *
   * @param signature  The signature of this {@link SignaturesOutput}
   */
  public void setSignature( @Nonnull final List<Signature> signature) {
    this.signature = signature;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link SignaturesOutput}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link SignaturesOutput} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("SignaturesOutput has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link SignaturesOutput} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final SignaturesOutput signaturesOutput = (SignaturesOutput) o;
    return Objects.equals(this.cloudSdkCustomFields, signaturesOutput.cloudSdkCustomFields) &&
        Objects.equals(this.signatures, signaturesOutput.signatures) &&
        Objects.equals(this.signature, signaturesOutput.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signatures, signature, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class SignaturesOutput {\n");
    sb.append("    signatures: ").append(toIndentedString(signatures)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}

